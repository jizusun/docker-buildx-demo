name: build our image

on:
  push:
    branches: master

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
      # - name: checkout code
      #   uses: actions/checkout@v2
      # - name: install buildx
      #   id: buildx
      #   uses: crazy-max/ghaction-docker-buildx@v1
      #   with:
      #     version: latest
      # - name: login to docker hub
      #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      # - name: build the image
      #   run: |
      #     docker buildx build --push \
      #       --tag jizu/multiarch-example:latest \
      #       --platform linux/arm/v7 .
      # --platform linux/amd64,linux/arm/v7,linux/arm64 .

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on debian buster armv7
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: buster

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

            apt-get update -q -y
            apt-get install -q -y git python gcc
            python --version

            pip install pip==18.1
            pip install pyinstaller

            python -m pip install --upgrade pip

            
            git clone https://github.com/pyinstaller/pyinstaller 
            cd pyinstaller/bootloader 
            python ./waf distclean all 
            cd ../PyInstaller/bootloader/ 
            file Linux-32bit-arm/run 

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"      